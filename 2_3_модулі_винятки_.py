# -*- coding: utf-8 -*-
"""2.3. Модулі. Винятки.

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KeJGqXIwGy0nqwiDRSIihyyeCU_XB3ka

# Домашнє завдання до теми "Модулі. Винятки (Exceptions)"

Почнемо з закріплення матеріалу щодо фукнцій і віпрацювання роботи з модулем `random`.

1. Напишіть функцію `get_random_int_list`, яка приймає один аргумент - кількість чисел `n`, і повертає список, що містить `n` випадкових цілих чисел з діапазону від 0 до 100 включно. Для генерації випадкових чисел використовуйте модуль `random`.

  **Вимоги до реалізації:**

  - Функція повинна приймати один аргумент `n` - кількість чисел у списку.
  - Для генерації випадкових чисел використовуйте функцію `random.randint(0, 100)`.
  - Повернутий список має містити рівно `n` випадкових чисел.

  **Приклади виклику функції та очікувані результати:**

  1. **Приклад 1:**
    - Виклик функції: `get_random_int_list(5)`
    - Очікуваний результат: Список з 5 випадковими числами, наприклад, `[23, 77, 45, 8, 91]`. Кожен запуск може повертати різні числа через випадковість.

  2. **Приклад 2:**
    - Виклик функції: `get_random_int_list(3)`
    - Очікуваний результат: Список з 3 випадковими числами, наприклад, `[64, 20, 37]`.

  3. **Приклад 3:**
    - Виклик функції: `get_random_int_list(0)`
    - Очікуваний результат: Порожній список `[]`, оскільки було запитано 0 чисел.

Продемонструйте результати робити функції запустивши код нижче.
"""

import random

def get_random_int_list(quant):
  list_of_random_numbers = []
  for i in range(quant):
    numbers = random.randint(0, 100)
    list_of_random_numbers.append(numbers)
  return (list_of_random_numbers)

for number in [5, 3, 0, 8]:
  print(get_random_int_list(number))

"""2. **Конвертер стрічки в число**

  **Опис завдання:**

  Створіть функцію `string_to_int`, яка приймає рядок і намагається перетворити його в ціле число. Якщо рядок не можна перетворити на ціле число, функція повинна повертати `None` і генерувати виключення `"Некоректне введення"`.

  **Приклади виклику функції:**

  - `string_to_int("123")` повинно повернути `123`.
  - `string_to_int("abc")` повинно повернути `None` і вивести виключення `"Некоректне введення"`.
"""

def string_to_int(str):
  try:
    return int(str)
  except ValueError:
    print("Некоректне введення")
    return None

print(string_to_int("123"))
print(string_to_int("fds"))

"""Продемонструйте результати робити функції запустивши код нижче."""

test_inputs = ["123", "abc", "456.78", "100"]
results = {input_value: string_to_int(input_value) for input_value in test_inputs}
results

"""3. **Контроль введення користувача**

  Створіть функцію `check_age`, яка приймає на вхід вік користувача у форматі рядок і перевіряє, чи є користувач повнолітнім (18 років і старше). Якщо введене значення не може бути перетворено на ціле число, функція повинна підіймати виняток `"Некоректне введення. Будь ласка, введіть числове значення."` і повертати `False`. Якщо вік користувача менше 18, вивести повідомлення `"Ви не повнолітній!"` і також повернути `False`. У випадку, коли вік 18 років або більше, вивести повідомлення `"Ви повнолітній."` і повернути `True`.

  **Приклад роботи програми:**

  1. Користувач вводить `"двадцять"`: програма створює виняток `"Некоректне введення. Будь ласка, введіть числове значення."` і повертає `False`.
  2. Користувач вводить `"17"`: програма виводить `"Ви не повнолітній!"` і повертає `False`.
  3. Користувач вводить `"18"`: програма виводить `"Ви повнолітній."` і повертає `True`.



"""

def check_age(age_str):
    try:
        age = int(age_str)
        if age < 18:
            print("Ви не повнолітній!")
            return False
        else:
            print("Ви повнолітній.")
            return True
    except ValueError:
        print("Некоректне введення. Будь ласка, введіть числове значення.")
        return False

print(check_age("123"))
print(check_age("fds"))
print(check_age("17"))

"""Продемонструйте результати робити функції запустивши код нижче."""

test_inputs = ["двадцять", "17", "18"]
results = [check_age(input_value) for input_value in test_inputs]
results

"""4. **Обчислення середнього з перевіркою:** Напишіть функцію `calculate_average`, яка приймає на вхід список чисел і обчислює середнє арифметичне значення цих чисел. Функція повинна перевіряти, що всі елементи списку є числами. Якщо серед елементів списку зустрічається елемент, який не є числом, функція повинна вивести повідомлення `"Всі елементи повинні бути числами"` і повернути `None`.

**Приклади виклику функції:**

- `calculate_average([1, 2, 3, 4, 5])` повинно повернути `3.0`.
- `calculate_average([1, "2", 3])` повинно повернути `None` і вивести `"Всі елементи повинні бути числами"`.
- `calculate_average([-1.1, "ф", 4])` повинно повернути `None` і вивести `"Всі елементи повинні бути числами"`.
"""

def calculate_average(numbers):

    for element in numbers:
        if not isinstance(element, (int, float)):
            print("Всі елементи повинні бути числами.")
            return None

    if len(numbers) == 0:
        return 0

    return sum(numbers) / len(numbers)

# Приклади використання
print(calculate_average([1, 2, 3, 4, 5]))
print(calculate_average([1, "2", 3]))
print(calculate_average([-1.1, "ф", 4]))

"""Продемонструйте результати робити функції запустивши код нижче."""

test_data = [
    [1, 2, 3, 4, 5],  # Коректні дані
    [1, "2", 3],      # Некоректні дані
    [10, 20, 30],     # Коректні дані
    [-1.1, "ф", 4]    # Некоректні дані
]

results = [calculate_average(data) for data in test_data]
results